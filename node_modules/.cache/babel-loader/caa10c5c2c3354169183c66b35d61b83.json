{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { productListReducer, productDetailsReducer, productDeleteReducer } from \"./reducers/productReducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/userReducres\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from \"./reducers/orderReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["F:/OWN-PROJECT/bestbuy-ecommerce/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","productListReducer","productDetailsReducer","productDeleteReducer","composeWithDevTools","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","productDelete","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,kBAAR,EAA4BC,qBAA5B,EAAmDC,oBAAnD,QAA8E,4BAA9E;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,EAA8CC,kBAA9C,EAAkEC,wBAAlE,EAA4FC,eAA5F,EAA6GC,iBAA7G,EAA+HC,iBAA/H,QAAwJ,yBAAxJ;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,eAAlD,EAAkEC,kBAAlE,QAA4F,yBAA5F;AAEA,MAAMC,OAAO,GAAGnB,eAAe,CAAC;AAC9BoB,EAAAA,WAAW,EAAEjB,kBADiB;AAE9BkB,EAAAA,cAAc,EAAEjB,qBAFc;AAG9BkB,EAAAA,aAAa,EAACjB,oBAHgB;AAI9BkB,EAAAA,IAAI,EAAEhB,WAJwB;AAK9BiB,EAAAA,SAAS,EAAEhB,gBALmB;AAM9BiB,EAAAA,YAAY,EAAEhB,mBANgB;AAO9BiB,EAAAA,WAAW,EAAEhB,kBAPiB;AAQ9BiB,EAAAA,iBAAiB,EAAEhB,wBARW;AAS9BiB,EAAAA,QAAQ,EAAEhB,eAToB;AAU9BiB,EAAAA,UAAU,EAAEhB,iBAVkB;AAW9BiB,EAAAA,UAAU,EAAEhB,iBAXkB;AAY9BiB,EAAAA,WAAW,EAAEhB,kBAZiB;AAa9BiB,EAAAA,YAAY,EAAEhB,mBAbgB;AAc9BiB,EAAAA,QAAQ,EAAEhB,eAdoB;AAe9BiB,EAAAA,WAAW,EAAEhB;AAfiB,CAAD,CAA/B;AAkBA,MAAMiB,oBAAoB,GAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,GAAgF,EAA3G;AACA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAGA,MAAMK,YAAY,GAAC;AACfnB,EAAAA,IAAI,EAAC;AACDoB,IAAAA,SAAS,EAACR,oBADT;AAC8BS,IAAAA,eAAe,EAACH;AAD9C,GADU;AAIfjB,EAAAA,SAAS,EAAC;AAACqB,IAAAA,QAAQ,EAACL;AAAV;AAJK,CAAnB;AAMA,MAAMM,UAAU,GAAC,CAAC5C,KAAD,CAAjB;AAEA,MAAM6C,KAAK,GAAChD,WAAW,CAACoB,OAAD,EAASuB,YAAT,EAAsBpC,mBAAmB,CAACL,eAAe,CAAC,GAAG6C,UAAJ,CAAhB,CAAzC,CAAvB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from \"redux\"\n\nimport thunk from \"redux-thunk\"\nimport {productListReducer, productDetailsReducer, productDeleteReducer} from \"./reducers/productReducers\"\nimport {composeWithDevTools} from \"redux-devtools-extension\"\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer,userRegisterReducer,userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer,userUpdateReducer } from \"./reducers/userReducres\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer,orderListMyReducer } from \"./reducers/orderReducer\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete:productDeleteReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n});\n\nconst cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[]\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\nconst initialState={\n    cart:{\n        cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage\n    },\n    userLogin:{userInfo:userInfoFromStorage}\n}\nconst middleware=[thunk]\n\nconst store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}